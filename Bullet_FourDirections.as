package {	import flash.display.MovieClip;	import flash.events.Event;	public class Bullet_FourDirections extends MovieClip	{		private var _vx:int;		private var _vy:int;		private var _direction:String;		private var _stageHeight:uint;		private var _stageWidth:uint;		public function Bullet_FourDirections(weaponDirection:String)		{			_direction = weaponDirection;			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}		private function onAddedToStage(event:Event):void		{			//Set the bullet's start position to be the			//same as the weapon's			x = MovieClip(parent).weapon.x;			y = MovieClip(parent).weapon.y;						//Initialize direction			if (_direction == "up")			{				_vy = -10;			}			if (_direction == "down")			{				_vy = 10;			}			if (_direction == "left")			{				_vx = -10;			}			if (_direction == "right")			{				_vx = 10;			}						//Find the stage height and width			//To use with stage boundaries			_stageWidth = stage.stageWidth;			_stageHeight = stage.stageHeight;						addEventListener(Event.ENTER_FRAME, onEnterFrame);			addEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);		}		private function onRemovedFromStage(event:Event):void		{			removeEventListener(Event.ENTER_FRAME, onEnterFrame);			removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			removeEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);			trace("bullet removed");		}		private function onEnterFrame(event:Event):void		{			//Move object			rotation += 20;			x += _vx;			y += _vy;						//Check for collisions with the enemies			MovieClip(parent).checkCollisionWithEnemies(this);						//Stage Boundaries:			//Top			if (y + height / 2 < 0)			{				parent.removeChild(this);			}			//Bottom			if (y - height / 2 > _stageHeight)			{				parent.removeChild(this);			}			//Left			if (x + width / 2 < 0)			{				parent.removeChild(this);			}			//Right			if (x - width / 2 > _stageWidth)			{				parent.removeChild(this);			}		}	}}